---
import { getCollection } from "astro:content";
import BaseLayout from "../../components/layout/BaseLayout.astro";
import BaseHero from "../../components/shared/BaseHero.astro";
import ArticleCard from "../../components/ui/ArticleCard.astro";
import Container from "../../components/ui/Container.astro";
import ContentList from "../../components/shared/ContentList.astro";
import { CATEGORIES } from "../../constants/site";

// 현재 URL 로깅
console.log("Current URL:", Astro.url.toString());
console.log("Current search params:", Object.fromEntries(Astro.url.searchParams.entries()));

const currentCategory = Astro.url.searchParams.get('category') || "all";
console.log("Selected category:", currentCategory);

const posts = await getCollection("blog", ({ data }) => {
  return import.meta.env.PROD ? !data.draft : true;
});

console.log("Posts data:", posts.map(post => ({
  title: post.data.title,
  category: post.data.category,
  type: typeof post.data.category
})));

const filteredPosts = currentCategory === "all" 
  ? posts 
  : posts.filter(post => {
      if (!post.data.category) return false;
    return String(post.data.category) === String(currentCategory);
    });

const sortedPosts = filteredPosts.sort((a, b) => b.data.publishedAt.getTime() - a.data.publishedAt.getTime());

const categoryCounts = CATEGORIES.map(cat => {
  const count = cat.slug === "all" 
    ? posts.length 
    : posts.filter(post => post.data.category && String(post.data.category) === cat.slug).length;
  return { ...cat, count };
});

console.log("Filtered posts:", filteredPosts.map(post => post.data.title));
console.log("Category counts:", categoryCounts);
---

<BaseLayout title="Blog" description="Read my latest blog posts">
  <Container>
    <BaseHero title="Blog" description="Read my latest blog posts" />
    
    <div class="categories">
      <a href="/blog" class="fixed-category" style="display: inline-block !important; padding: 0.5rem 1rem !important; border-radius: 9999px !important; background-color: #4F46E5 !important; color: white !important; font-size: 0.875rem !important; border: 1px solid #4F46E5 !important; text-decoration: none !important; margin-right: 0.5rem !important;">
        All ({posts.length})
      </a>
      
      <a href="/blog/category/network" class="fixed-category" style="display: inline-block !important; padding: 0.5rem 1rem !important; border-radius: 9999px !important; background-color: #4F46E5 !important; color: white !important; font-size: 0.875rem !important; border: 1px solid #4F46E5 !important; text-decoration: none !important; margin-right: 0.5rem !important;">
        네트워크 ({posts.filter(post => post.data.category === 'network').length})
      </a>
      
      <a href="/blog/category/cloud" class="fixed-category" style="display: inline-block !important; padding: 0.5rem 1rem !important; border-radius: 9999px !important; background-color: #4F46E5 !important; color: white !important; font-size: 0.875rem !important; border: 1px solid #4F46E5 !important; text-decoration: none !important; margin-right: 0.5rem !important;">
        클라우드 ({posts.filter(post => post.data.category === 'cloud').length})
      </a>
    </div>
    
    <ContentList>
      {
        sortedPosts.length > 0 ? (
          sortedPosts.map((post) => (
            <ArticleCard
              title={post.data.title}
              description={post.data.description}
              url={`/blog/${post.id}`}
              date={post.data.publishedAt}
              tags={post.data.tags}
            />
          ))
        ) : (
          <p class="no-posts">이 카테고리에 아직 포스트가 없습니다.</p>
        )
      }
    </ContentList>
  </Container>
</BaseLayout>

<style>
  .categories {
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem;
    margin-bottom: 2rem;
  }
  
  /* 모든 상태에서 동일한 스타일 강제 적용 */
  .fixed-category,
  .fixed-category:visited,
  .fixed-category:active,
  .fixed-category:hover,
  .fixed-category:link,
  .fixed-category:focus {
    display: inline-block !important;
    padding: 0.5rem 1rem !important;
    border-radius: 9999px !important;
    background-color: #4F46E5 !important;
    color: white !important;
    font-size: 0.875rem !important;
    border: 1px solid #4F46E5 !important;
    text-decoration: none !important;
  }
  
  /* 밑줄 효과 제거 */
  .fixed-category::after {
    display: none !important;
  }
  
  /* 전역 스타일 오버라이드 */
  a.fixed-category {
    background-color: #4F46E5 !important;
    color: white !important;
  }
  
  /* active 클래스도 오버라이드 */
  a.fixed-category.active {
    background-color: #4F46E5 !important;
    color: white !important;
  }
  
  .no-posts {
    text-align: center;
    color: var(--text-muted);
    padding: 2rem 0;
  }
</style>